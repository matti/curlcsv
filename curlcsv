#!/usr/bin/env bash
set -euo pipefail

_term() {
  >&2 echo "TERM"
  exit 0
}
_int() {
  kill $(jobs -p) || true
  wait $(jobs -p) || true

  pbcopy < "$csv"
  echo ""
  echo ""
  echo "$csv"
  exit 0
}

trap "_term" TERM
trap "_int" INT
_err() {
  >&2 echo "err: $*"
  exit 1
}
case "${1:-}" in
  --parallel|-p)
    parallel=$2
    url=${@:3}
  ;;
  *)
    parallel=1
    url=$@
  ;;
esac

started_at=$(date +%Y-%m-%d-%H-%M-%S)
csv="/tmp/curlcsv-$started_at.csv"

printf "date\ttook\tcode\tworker\n" | tee -a "$csv"
for worker in $(seq 1 $parallel); do
  (
    while true; do
      now_seconds=$SECONDS
      now=$(date '+%Y-%m-%d %H:%M:%S')
      set +e
        line=$(curl -L -s -o /dev/null -w "%{time_starttransfer};%{http_code}\n" "$url")
        curl_status=$?
      set -e
      if [ "$curl_status" = 0 ]; then
        took=$(echo $line | cut -d';' -f1 | cut -c -4)
        code=$(echo $line | cut -d';' -f2)
      else
        took=$(($SECONDS - $now_seconds))
        code=-1
      fi

      printf "%s\t%s\t%s\t%s\n" "$now" "$took" "$code" "$worker" | tee -a "$csv"
    done
  ) &
done

wait $(jobs -p)
